{
  "metainfo" : {
    "migrationVersions" : {
      "gemBuilderVersion" : "v1"
    },
    "codeGenConfiguration" : {
      "editableConfig" : true
    },
    "id" : "1",
    "uri" : "pipelines/CustomerOrders",
    "language" : "scala",
    "fabricId" : "9869",
    "frontEndLanguage" : "sql",
    "mode" : "batch",
    "udfs" : {
      "language" : "scala",
      "udfs" : [ ],
      "functionPackageName" : "rakeshprophecyioteam.helloprophecyrakesh.functions",
      "sharedFunctionPackageNames" : [ "io.prophecy.scalagems.functions", "io.prophecy.warehousegems.functions" ]
    },
    "udafs" : {
      "language" : "scala",
      "code" : "package udfs\n\nimport org.apache.spark.sql.expressions._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql._\n\n/**\n  * Here you can define your custom aggregate functions.\n  *\n  * Make sure to register your `udafs` in the register_udafs function below.\n  *\n  * Example:\n  *\n  * object GeometricMean extends UserDefinedAggregateFunction {\n  *   // This is the input fields for your aggregate function.\n  *   override def inputSchema: org.apache.spark.sql.types.StructType =\n  *     StructType(StructField(\"value\", DoubleType) :: Nil)\n  *\n  *   // This is the internal fields you keep for computing your aggregate.\n  *   override def bufferSchema: StructType = StructType(\n  *     StructField(\"count\", LongType) ::\n  *     StructField(\"product\", DoubleType) :: Nil\n  *   )\n  *\n  *   // This is the output type of your aggregatation function.\n  *   override def dataType: DataType = DoubleType\n  *\n  *   override def deterministic: Boolean = true\n  *\n  *   // This is the initial value for your buffer schema.\n  *   override def initialize(buffer: MutableAggregationBuffer): Unit = {\n  *     buffer(0) = 0L\n  *     buffer(1) = 1.0\n  *   }\n  *\n  *   // This is how to update your buffer schema given an input.\n  *   override def update(buffer: MutableAggregationBuffer, input: Row): Unit = {\n  *     buffer(0) = buffer.getAs[Long](0) + 1\n  *     buffer(1) = buffer.getAs[Double](1) * input.getAs[Double](0)\n  *   }\n  *\n  *   // This is how to merge two objects with the bufferSchema type.\n  *   override def merge(buffer1: MutableAggregationBuffer, buffer2: Row): Unit = {\n  *     buffer1(0) = buffer1.getAs[Long](0) + buffer2.getAs[Long](0)\n  *     buffer1(1) = buffer1.getAs[Double](1) * buffer2.getAs[Double](1)\n  *   }\n  *\n  *   // This is where you output the final value, given the final value of your bufferSchema.\n  *   override def evaluate(buffer: Row): Any = {\n  *     math.pow(buffer.getDouble(1), 1.toDouble / buffer.getLong(0))\n  *   }\n  * }\n  *\n  */\n\n\nobject UDAFs {\n  /**\n    * Registers UDAFs with Spark SQL\n    */\n  def registerUDAFs(spark: SparkSession): Unit = {\n    /**\n      * Example:\n      *\n      * spark.udf.register(\"gm\", GeometricMean)\n      *\n      */\n\n\n  }\n}\n"
    },
    "configuration" : {
      "common" : {
        "type" : "record",
        "fields" : [ ]
      },
      "oldCommon" : {
        "type" : "record",
        "fields" : [ ]
      },
      "fabrics" : { },
      "instances" : { },
      "selected" : "default",
      "nonEditable" : [ ],
      "isSubscribedPipelineWithPipelineConfigs" : false
    },
    "sparkConf" : [ {
      "name" : "spark.sql.shuffle.partitions",
      "value" : "5"
    } ],
    "hadoopConf" : [ ],
    "codeMode" : "sparse",
    "buildSystem" : "maven",
    "externalDependencies" : [ ],
    "dependentProjectExternalDependencies" : [ {
      "projectUID" : "12651",
      "projectName" : "ProphecySparkBasicsScala",
      "externalDependencies" : [ ]
    }, {
      "projectUID" : "12652",
      "projectName" : "ProphecyWarehouseScala",
      "externalDependencies" : [ ]
    } ],
    "isImported" : false,
    "interimMode" : "Full",
    "interimModeEnabled" : true,
    "visualCodeInterimMode" : "Disabled",
    "recordsLimit" : {
      "enabled" : false,
      "value" : 1000
    },
    "topLevelPackage" : "io.prophecy.pipelines.customerorders",
    "configurationVersion" : "v1"
  },
  "connections" : [ {
    "id" : "wwUvTjbiQ8HK1iqWD4Pg9$$FhqcR1I8w02gl5O5wwfIh",
    "source" : "eVOjzAA0YP26GI6T_fOQ6$$thHxbUnP2bj42P0miJ-JF",
    "sourcePort" : "vz30dke80nNgj2yUaqGbt$$6zxzeBR4xaWJ3UvV33HPP",
    "target" : "TsWZoeYebaZAPtinaHOqU$$LtLgqv7Q2z-awa-H10tFL",
    "targetPort" : "7fhZhQ4sV-tA-UGOOGahZ$$08l7dzhf73W6fKHq-il8b"
  }, {
    "id" : "SFnQy_pb9HiX0PEUHL4y3$$COCgUoj3UeHhKz_p56oT-",
    "source" : "YCKn2JmUe36gDSHdMpDbH$$zMrpIVWqEiFv0ngD_gkCQ",
    "sourcePort" : "kh54nXiMGHaqaggEi-H0D$$uK1y6PAepX0qz6eLg-P5b",
    "target" : "TsWZoeYebaZAPtinaHOqU$$LtLgqv7Q2z-awa-H10tFL",
    "targetPort" : "w4hBCqaakrOUQqBbeHRZG$$s01d35QyVvfL3HsFyxIAm"
  }, {
    "id" : "8TlWSSIv3goQKk93QuhgN$$3fyoRtaehX8cSX7eS3_vV",
    "source" : "TsWZoeYebaZAPtinaHOqU$$LtLgqv7Q2z-awa-H10tFL",
    "sourcePort" : "rX3z4fn-_OiSvDqsopfzB$$e-4Hzs8KzzkMEetD47amj",
    "target" : "nA6cC3OdcwPFmdysU9Y81$$OmHTXoY3qKrx2J4JdgDuh",
    "targetPort" : "78BuuY749u4LuSFAfJsm5$$q9EQrf2slEMncPJdj1i3r"
  } ],
  "processes" : {
    "eVOjzAA0YP26GI6T_fOQ6$$thHxbUnP2bj42P0miJ-JF" : {
      "id" : "eVOjzAA0YP26GI6T_fOQ6$$thHxbUnP2bj42P0miJ-JF",
      "component" : "Source",
      "metadata" : {
        "label" : "Customers",
        "slug" : "Customers",
        "x" : -560,
        "y" : -360,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "vz30dke80nNgj2yUaqGbt$$6zxzeBR4xaWJ3UvV33HPP",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "datasetId" : "datasets/Customers"
      }
    },
    "YCKn2JmUe36gDSHdMpDbH$$zMrpIVWqEiFv0ngD_gkCQ" : {
      "id" : "YCKn2JmUe36gDSHdMpDbH$$zMrpIVWqEiFv0ngD_gkCQ",
      "component" : "Source",
      "metadata" : {
        "label" : "Orders",
        "slug" : "Orders",
        "x" : -560,
        "y" : -140,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "kh54nXiMGHaqaggEi-H0D$$uK1y6PAepX0qz6eLg-P5b",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "datasetId" : "datasets/Orders"
      }
    },
    "TsWZoeYebaZAPtinaHOqU$$LtLgqv7Q2z-awa-H10tFL" : {
      "id" : "TsWZoeYebaZAPtinaHOqU$$LtLgqv7Q2z-awa-H10tFL",
      "component" : "Join",
      "metadata" : {
        "label" : "join_customer_order",
        "slug" : "join_customer_order",
        "x" : -360,
        "y" : -260,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "7fhZhQ4sV-tA-UGOOGahZ$$08l7dzhf73W6fKHq-il8b",
          "slug" : "in0",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "first_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "last_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "phone",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "email",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "country_code",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_open_date",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_flags",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        }, {
          "id" : "w4hBCqaakrOUQqBbeHRZG$$s01d35QyVvfL3HsFyxIAm",
          "slug" : "in1",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "order_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "order_status",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "order_category",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "order_date",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "amount",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "outputs" : [ {
          "id" : "rX3z4fn-_OiSvDqsopfzB$$e-4Hzs8KzzkMEetD47amj",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "conditions" : [ {
          "alias" : "in1",
          "expression" : {
            "format" : "sql",
            "expression" : "in0.customer_id = in1.customer_id"
          },
          "joinType" : "inner"
        } ],
        "expressions" : [ {
          "target" : "customer_id",
          "expression" : {
            "format" : "sql",
            "expression" : "in0.customer_id"
          },
          "description" : ""
        }, {
          "target" : "first_name",
          "expression" : {
            "format" : "sql",
            "expression" : "in0.first_name"
          },
          "description" : ""
        }, {
          "target" : "last_name",
          "expression" : {
            "format" : "sql",
            "expression" : "in0.last_name"
          },
          "description" : ""
        }, {
          "target" : "country_code",
          "expression" : {
            "format" : "sql",
            "expression" : "in0.country_code"
          },
          "description" : ""
        }, {
          "target" : "order_id",
          "expression" : {
            "format" : "sql",
            "expression" : "in1.order_id"
          },
          "description" : ""
        }, {
          "target" : "order_status",
          "expression" : {
            "format" : "sql",
            "expression" : "in1.order_status"
          },
          "description" : ""
        }, {
          "target" : "order_category",
          "expression" : {
            "format" : "sql",
            "expression" : "in1.order_category"
          },
          "description" : ""
        }, {
          "target" : "order_date",
          "expression" : {
            "format" : "sql",
            "expression" : "in1.order_date"
          },
          "description" : ""
        }, {
          "target" : "amount",
          "expression" : {
            "format" : "sql",
            "expression" : "in1.amount"
          },
          "description" : ""
        } ],
        "hints" : [ {
          "id" : "7fhZhQ4sV-tA-UGOOGahZ$$08l7dzhf73W6fKHq-il8b",
          "alias" : "in0",
          "hintType" : "none",
          "propagateColumns" : false
        }, {
          "id" : "w4hBCqaakrOUQqBbeHRZG$$s01d35QyVvfL3HsFyxIAm",
          "alias" : "in1",
          "hintType" : "none",
          "propagateColumns" : false
        } ],
        "activeTab" : "conditions",
        "columnsSelector" : [ "7fhZhQ4sV-tA-UGOOGahZ$$08l7dzhf73W6fKHq-il8b##customer_id", "w4hBCqaakrOUQqBbeHRZG$$s01d35QyVvfL3HsFyxIAm##customer_id", "7fhZhQ4sV-tA-UGOOGahZ$$08l7dzhf73W6fKHq-il8b##customer_id", "7fhZhQ4sV-tA-UGOOGahZ$$08l7dzhf73W6fKHq-il8b##first_name", "7fhZhQ4sV-tA-UGOOGahZ$$08l7dzhf73W6fKHq-il8b##last_name", "7fhZhQ4sV-tA-UGOOGahZ$$08l7dzhf73W6fKHq-il8b##country_code", "w4hBCqaakrOUQqBbeHRZG$$s01d35QyVvfL3HsFyxIAm##order_id", "w4hBCqaakrOUQqBbeHRZG$$s01d35QyVvfL3HsFyxIAm##order_status", "w4hBCqaakrOUQqBbeHRZG$$s01d35QyVvfL3HsFyxIAm##order_category", "w4hBCqaakrOUQqBbeHRZG$$s01d35QyVvfL3HsFyxIAm##order_date", "w4hBCqaakrOUQqBbeHRZG$$s01d35QyVvfL3HsFyxIAm##amount" ],
        "headAlias" : "in0"
      },
      "componentInfo" : {
        "gemId" : "gitUri=http://gitserver:3000/DxEheDCJ_team_5751/DxEheDCJ_project_12651.git&subPath=&tag=0.1.2&projectSubscriptionProjectId=12651&path=gems/Join",
        "projectName" : "ProphecySparkBasicsScala"
      }
    },
    "nA6cC3OdcwPFmdysU9Y81$$OmHTXoY3qKrx2J4JdgDuh" : {
      "id" : "nA6cC3OdcwPFmdysU9Y81$$OmHTXoY3qKrx2J4JdgDuh",
      "component" : "Aggregate",
      "metadata" : {
        "label" : "amounts_by_customer_id",
        "slug" : "amounts_by_customer_id",
        "x" : -160,
        "y" : -260,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "78BuuY749u4LuSFAfJsm5$$q9EQrf2slEMncPJdj1i3r",
          "slug" : "in",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "first_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "last_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "country_code",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "order_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "order_status",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "order_category",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "order_date",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "amount",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "outputs" : [ {
          "id" : "UcMdfLul9wp_I6mcIcwiJ$$df-1VUwgBozSx3xGJ4PyP",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "allIns" : false,
        "doPivot" : false,
        "aggregate" : [ {
          "_row_id" : "c_32",
          "target" : "total_amount",
          "expression" : {
            "format" : "sql",
            "expression" : "sum(amount)"
          },
          "description" : ""
        } ],
        "allowSelection" : true,
        "pivotValues" : [ ],
        "activeTab" : "aggregate",
        "columnsSelector" : [ "78BuuY749u4LuSFAfJsm5$$q9EQrf2slEMncPJdj1i3r##customer_id", "78BuuY749u4LuSFAfJsm5$$q9EQrf2slEMncPJdj1i3r##amount" ],
        "groupBy" : [ {
          "target" : "customer_id",
          "expression" : {
            "format" : "sql",
            "expression" : "customer_id"
          },
          "description" : ""
        } ]
      },
      "componentInfo" : {
        "gemId" : "gitUri=http://gitserver:3000/DxEheDCJ_team_5751/DxEheDCJ_project_12651.git&subPath=&tag=0.1.2&projectSubscriptionProjectId=12651&path=gems/Aggregate",
        "projectName" : "ProphecySparkBasicsScala"
      }
    }
  },
  "ports" : {
    "inputs" : [ ],
    "outputs" : [ ],
    "selectedInputFields" : [ ],
    "isCustomOutputSchema" : false,
    "autoUpdateOnRun" : false
  }
}